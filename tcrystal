#!/usr/bin/env bash
set -e -o pipefail; set +H; umask 022; export LC_ALL=C LANG=C
LEDGER=".tau_ledger"; mkdir -p "$LEDGER/receipts"
if [ "$#" -ge 1 ] && [ "$1" = "run" ]; then shift; fi
if [ "$#" -eq 0 ]; then echo "[tcrystal] usage: tcrystal run <command> [args...]" >&2; exit 64; fi
tmpout="$(mktemp)"
echo "[tcrystal] instrumenting:" "$@" >&2
set +e
"$@" > "$tmpout"
rc=$?
set -e
if command -v sha256sum >/dev/null 2>&1; then sha=$(sha256sum "$tmpout"|awk "{print \$1}");
elif command -v shasum >/dev/null 2>&1; then sha=$(shasum -a 256 "$tmpout"|awk "{print \$1}");
else sha=$(python3 -c 'import sys,hashlib,os;print(hashlib.sha256(open(os.environ["f"],"rb").read()).hexdigest())' f="$tmpout"); fi
ts=$(python3 -c "import datetime;print(datetime.datetime.now(datetime.timezone.utc).strftime(\"%Y-%m-%dT%H:%M:%SZ\"))")
out="$LEDGER/receipts/last.json"
writer="$(mktemp)"; : > "$writer"
printf "%s\n" "import json,sys,shlex" >> "$writer"
printf "%s\n" "out, ts, sha, rc = sys.argv[1:5]" >> "$writer"
printf "%s\n" "cmd = sys.argv[5:]" >> "$writer"
printf "%s\n" "doc = {\"manifest_version\":1, \"timestamp\":ts, \"command\":\" \".join([shlex.quote(c) for c in cmd]), \"output_sha256\":sha, \"exit_code\":int(rc)}" >> "$writer"
printf "%s\n" "json.dump(doc, open(out, \"w\"), indent=2)" >> "$writer"
python3 "$writer" "$out" "$ts" "$sha" "$rc" "$@"
rm -f "$writer"
cat "$tmpout"; rm -f "$tmpout"
if [ "${TCRYSTAL_STRICT:-0}" = "1" ]; then exit "$rc"; else exit 0; fi
