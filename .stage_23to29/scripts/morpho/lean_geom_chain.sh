#!/usr/bin/env bash
set -E -o pipefail; set +H; umask 022
# Usage: lean_geom_chain.sh <landmarks.tsv> [subject_id]
IN="${1:-}"; SUBJ="${2:-anon}"
[ -n "$IN" ] && [ -s "$IN" ] || { echo "[lean_geom] missing input"; exit 2; }
B="$(basename "$IN")"; N="${B%.*}"
HSH="$(sha256sum "$IN" 2>/dev/null | awk "{print \$1}")"
[ -n "$HSH" ] || { echo "[lean_geom] sha256sum unavailable"; exit 3; }
OUT="TauCrystal/GeomProofs/${N}.lean"
REC=".tau_ledger/morpho/lean_geom/${N}.receipt.json"
TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
: > "$OUT"
printf '%s\n' '-- Autogenerated geometric invariants stub (Lean 4)' >> "$OUT"
printf '%s\n' 'namespace TauCrystal.Geom' >> "$OUT"
printf '%s\n' '' >> "$OUT"
printf '%s\n' '/-- Landmark receipt: file="%s" sha256=%s subject="%s" timestamp="%s" -/' "$IN" "$HSH" "$SUBJ" "$TS" >> "$OUT"
printf '%s\n' 'structure Landmark := (x : Float) (y : Float) (label : String)' >> "$OUT"
printf '%s\n' 'def canonicalFrameWellPosed : Prop := True' >> "$OUT"
printf '%s\n' 'theorem receiptBindsData : canonicalFrameWellPosed := by' >> "$OUT"
printf '%s\n' '  -- TODO: replace with formal lemma that the canonical Helmert frame is unique up to sign under the chosen anchor set' >> "$OUT"
printf '%s\n' '  trivial' >> "$OUT"
printf '%s\n' '' >> "$OUT"
printf '%s\n' 'theorem stableInterModelAgreement : True := by' >> "$OUT"
printf '%s\n' '  -- TODO: encode cross-model agreement bounds as inequalities over Landmark arrays' >> "$OUT"
printf '%s\n' '  trivial' >> "$OUT"
printf '%s\n' '' >> "$OUT"
printf '%s\n' 'end TauCrystal.Geom' >> "$OUT"
: > "$REC"
printf "%s" "{" >> "$REC"
printf "%s" "\"kind\":\"morpho/lean_geom\",\"timestamp\":\"$TS\"," >> "$REC"
printf "%s" "\"subject\":\"$SUBJ\"," >> "$REC"
printf "%s" "\"input\":\"$IN\"," >> "$REC"
printf "%s" "\"sha256\":\"$HSH\"," >> "$REC"
printf "%s" "\"lean_file\":\"$OUT\"" >> "$REC"
printf "%s\n" "}" >> "$REC"
echo "[lean_geom] wrote $OUT and $REC"
