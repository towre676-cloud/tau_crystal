name: "Lean CI (SmartCache)"
description: "Lean 4 with cache keyed to mathlib rev (+ lake/elan). Faster repeat CI."
author: "towre676-cloud"
branding: { icon: "zap", color: "blue" }
inputs:
  working-directory:
    description: "Directory with lakefile.lean"
    required: false
    default: "."
  lean-version:
    description: "elan toolchain, e.g. 'leanprover/lean4:stable'"
    required: false
    default: ""
  smart-cache:
    description: "Key cache to mathlib rev detected from lake-manifest.json"
    required: false
    default: "true"
  cache-path:
    description: "Paths to cache (newline-separated)"
    required: false
    default: |
      ~/.elan
      ${{ inputs.working-directory }}/.lake
      ${{ inputs.working-directory }}/lake-packages
runs:
  using: "composite"
  steps:
    - name: Setup elan (Lean toolchain)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -euo pipefail
        if [[ -n "${{ inputs.lean-version }}" ]]; then
          echo "${{ inputs.lean-version }}" > lean-toolchain
        fi
        curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh \
          | bash -s -- -y
        echo "$HOME/.elan/bin" >> $GITHUB_PATH

    - name: Compute cache keys (elan + lake + mathlib rev)
      id: keys
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -euo pipefail
        os="${{ runner.os }}"
        toolchain="$(cat lean-toolchain 2>/dev/null || echo "unknown")"
        lake_hash="$( (sha256sum lakefile.lean 2>/dev/null || echo "no-lake  -") | awk '{print $1}' | cut -c1-12 )"

        mathlib_rev="none"
        if [[ "${{ inputs.smart-cache }}" == "true" ]] && [[ -f lake-manifest.json ]]; then
          # Try jq first, then fall back to grep if missing.
          if command -v jq >/dev/null 2>&1; then
            mathlib_rev="$(jq -r '(.packages // [])[]
               | select((.name|ascii_downcase)=="mathlib" or (.name|ascii_downcase)=="mathlib4")
               | (.rev // .commit // .git // "")' lake-manifest.json | head -n1)"
          fi
          if [[ -z "${mathlib_rev}" || "${mathlib_rev}" == "null" ]]; then
            mathlib_rev="$(grep -oE '"rev"\s*:\s*"[0-9a-f]{7,}"' lake-manifest.json | head -n1 | grep -oE '[0-9a-f]{7,}')"
          fi
          [[ -z "${mathlib_rev}" ]] && mathlib_rev="none"
        fi

        prefix="lean-${toolchain}-${os}-lake-${lake_hash}-"
        key="${prefix}mathlib-${mathlib_rev}"

        {
          echo "CACHE_KEY_PREFIX=${prefix}"
          echo "CACHE_KEY=${key}"
        } >> "$GITHUB_ENV"

        echo "key=${key}" >> "$GITHUB_OUTPUT"
        echo "prefix=${prefix}" >> "$GITHUB_OUTPUT"

    - name: Cache elan/lake artifacts
      uses: actions/cache@v4
      with:
        key: ${{ env.CACHE_KEY }}
        restore-keys: |
          ${{ env.CACHE_KEY_PREFIX }}
        path: ${{ inputs.cache-path }}

    - name: Build (lake build)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -euo pipefail
        lake -Kenv=dev update
        lake build
