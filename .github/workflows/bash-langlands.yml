name: Langlands Lab CI
on: [push, pull_request]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python (python -> python3)
        run: sudo apt-get update && sudo apt-get install -y python3 python-is-python3

      - name: Adele snapshot
        run: bash scripts/langlands/lab.sh adele .

      - name: L(1) and rank(.tau_ledger)
        run: |
          bash scripts/langlands/lab.sh L 1 .tau_ledger
          bash scripts/langlands/lab.sh rank .tau_ledger

      - name: Parameter sweep (scan modularity)
        id: scan
        run: |
          SCAN_PATH=$(python scripts/langlands/scan_modularity.py ".tau_ledger" ".tau_ledger/demo")
          echo "path=${SCAN_PATH}" >> "$GITHUB_OUTPUT"
          echo "scan_path=$SCAN_PATH"

      - name: Pick best (n,s,t)
        id: best
        run: |
          python scripts/langlands/emit_best.py "${{ steps.scan.outputs.path }}"
        shell: bash

      - name: Hecke/Theta with chosen params
        run: |
          echo "Using n=${{ steps.best.outputs.BEST_N }} s=${{ steps.best.outputs.BEST_S }} t=${{ steps.best.outputs.BEST_T }} (Delta~${{ steps.best.outputs.BEST_DELTA }})"
          bash scripts/langlands/lab.sh hecke "${{ steps.best.outputs.BEST_N }}" .tau_ledger
          bash scripts/langlands/lab.sh theta "${{ steps.best.outputs.BEST_S }}" "${{ steps.best.outputs.BEST_T }}" .tau_ledger/demo

      - name: Modularity assertion (fail if not within tol)
        env:
          TOL: '1e-3'
        run: |
          bash scripts/langlands/lab.sh modular "${{ steps.best.outputs.BEST_N }}" .tau_ledger/demo .tau_ledger "$TOL"
      - name: Bash reciprocity (strict)
        run: bash scripts/langlands/reciprocity.sh .tau_ledger .tau_ledger/demo 1000
