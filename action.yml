name: "τ-Crystal Verify"
description: "Receipt-first, Merkle-rooted attestation via pure bash (Lean optional via elan)."
author: "towre676-cloud"
branding:
  icon: "lock"
  color: "purple"

inputs:
  working-directory:
    description: "Path to verify"
    required: false
    default: "."
  install-elan:
    description: "Install Lean toolchain with elan"
    required: false
    default: "true"

outputs:
  receipt-path:
    description: "Latest receipt JSON path"
    value: ${{ steps.outs.outputs.receipt }}
  chain-head:
    description: "CHAIN head (sha256)"
    value: ${{ steps.outs.outputs.head }}
  merkle-root:
    description: "Manifest merkle root"
    value: ${{ steps.outs.outputs.root }}

runs:
  using: "composite"
  steps:
    - name: Install elan (optional)
      if: ${{ inputs.install-elan == 'true' }}
      shell: bash
      run: |
        set +H; umask 022
        curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y
        echo "$HOME/.elan/bin" >> "$GITHUB_PATH"

    - name: Verify with τ-Crystal
      shell: bash
      env:
        ACTION_DIR: ${{ github.action_path }}
      working-directory: ${{ inputs.working-directory }}
      run: |
        set +H; umask 022
        if [ -x "$ACTION_DIR/scripts/tau_verify.sh" ]; then bash "$ACTION_DIR/scripts/tau_verify.sh"; fi
        if [ -x "$ACTION_DIR/scripts/spec_guard.sh" ]; then bash "$ACTION_DIR/scripts/spec_guard.sh" || true; fi
        if [ -s ".tau_ledger/signals/observable.tsv" ] && [ -x "$ACTION_DIR/scripts/tau_adapter.sh" ]; then
          bash "$ACTION_DIR/scripts/tau_adapter.sh" .tau_ledger/signals/observable.tsv || true
        fi

    - name: Record wrapper digest
      shell: bash
      env:
        ACTION_DIR: ${{ github.action_path }}
      working-directory: ${{ inputs.working-directory }}
      run: |
        set +H; umask 022
        bash "$ACTION_DIR/scripts/bin/hash_action_wrapper.sh" "${{ inputs.working-directory }}"

    - name: Enforce wrapper digest (required)
      shell: bash
      env:
        ACTION_DIR: ${{ github.action_path }}
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -Eeuo pipefail; set +H; umask 022
        bash "$ACTION_DIR/scripts/bin/enforce_wrapper_digest.sh" "${{ inputs.working-directory }}"

    - name: Collect outputs
      id: outs
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set +H; umask 022
        rcpt=""; head=""; root=""
        if [ -f .tau_ledger/CHAIN ]; then
          rcpt=$(awk '{p=$2} END{print p}' .tau_ledger/CHAIN 2>/dev/null || true)
          head=$(awk 'END{print $1}' .tau_ledger/CHAIN 2>/dev/null || true)
        fi
        if [ -f tau-crystal-manifest.json ]; then
          root=$(grep -oE '"merkle_root"[[:space:]]*:[[:space:]]*"[^"]*"' tau-crystal-manifest.json | sed -E 's/.*:"([^"]*)".*/\1/' | head -n1 || true)
        fi
        echo "receipt=$rcpt" >> "$GITHUB_OUTPUT"
        echo "head=$head" >> "$GITHUB_OUTPUT"
        echo "root=$root" >> "$GITHUB_OUTPUT"
