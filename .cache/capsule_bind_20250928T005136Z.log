[run] scripts/meta/capsule_seal_set.sh
+ cd /c/Users/Cody/Desktop/tau_crystal/tau_crystal
+ set -euo pipefail
+ set +H
+ umask 022
+ export LC_ALL=C LANG=C
+ LC_ALL=C
+ LANG=C
+ BASE=.tau_ledger/lean_module_capsules
+ IDX=.tau_ledger/lean_module_capsules/index.json
+ SHA=.tau_ledger/lean_module_capsules/index.sha256
+ '[' -s .tau_ledger/lean_module_capsules/index.json ']'
++ cut '-d ' -f1 .tau_ledger/lean_module_capsules/index.sha256
+ root=055200b4c23034b0064f80b51d097d30b805e6a023bafec5fcf0d579515b737f
+ '[' -n 055200b4c23034b0064f80b51d097d30b805e6a023bafec5fcf0d579515b737f ']'
++ lake env lean --version
++ head -n1
+ tc='Lean (version 4.22.0, x86_64-w64-windows-gnu, commit ba2cbbf09d4978f416e0ebd1fceeebc2c4138c05, Release)'
++ lake --version
++ head -n1
+ lv='Lake version 5.0.0-src+ba2cbbf (Lean version 4.22.0)'
++ find .tau_ledger/lean_module_capsules -type f -name '*.json' '!' -name index.json
++ wc -l
++ tr -d '[:space:]'
+ tot=4
++ grep -c '"build_ok":1' .tau_ledger/lean_module_capsules/index.json
++ echo 0
+ ok='0
0'
++ grep -c '"build_ok":0' .tau_ledger/lean_module_capsules/index.json
+ bad=1
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ now=2025-09-28T00:51:39Z
+ out=.tau_ledger/lean_module_capsules/capsule_set.seal.json
+ :
+ printf '{'
+ printf '"kind":"lean.module.capsule.set",'
+ printf '"root_hash":"%s",' 055200b4c23034b0064f80b51d097d30b805e6a023bafec5fcf0d579515b737f
+ printf '"sealed_at":"%s",' 2025-09-28T00:51:39Z
+ printf '"toolchain":"%s",' 'Lean (version 4.22.0, x86_64-w64-windows-gnu, commit ba2cbbf09d4978f416e0ebd1fceeebc2c4138c05, Release)'
+ printf '"lake":"%s",' 'Lake version 5.0.0-src+ba2cbbf (Lean version 4.22.0)'
+ printf '"total_modules":%s,' 4
+ printf '"build_ok":%s,' '0
0'
+ printf '"build_fail":%s,' 1
+ printf '"index_path":"%s"' .tau_ledger/lean_module_capsules/index.json
+ printf '}\n'
[rc=0] scripts/meta/capsule_seal_set.sh
[run] scripts/meta/corridor_bind_capsules.sh
+ cd /c/Users/Cody/Desktop/tau_crystal/tau_crystal
+ set -euo pipefail
+ set +H
+ umask 022
+ export LC_ALL=C LANG=C
+ LC_ALL=C
+ LANG=C
+ BASE=.tau_ledger/lean_module_capsules
+ SEAL=.tau_ledger/lean_module_capsules/capsule_set.seal.json
+ IDX=.tau_ledger/lean_module_capsules/index.json
+ '[' -s .tau_ledger/lean_module_capsules/capsule_set.seal.json ']'
+ out=docs/ledger/lean_capsule_manifest.json
+ :
+ printf '{'
+ printf '"kind":"corridor.manifest.lean_capsules",'
++ cat .tau_ledger/lean_module_capsules/capsule_set.seal.json
+ printf '"seal":%s,' '{"kind":"lean.module.capsule.set","root_hash":"055200b4c23034b0064f80b51d097d30b805e6a023bafec5fcf0d579515b737f","sealed_at":"2025-09-28T00:51:39Z","toolchain":"Lean (version 4.22.0, x86_64-w64-windows-gnu, commit ba2cbbf09d4978f416e0ebd1fceeebc2c4138c05, Release)","lake":"Lake version 5.0.0-src+ba2cbbf (Lean version 4.22.0)","total_modules":4,"build_ok":0
0,"build_fail":1,"index_path":".tau_ledger/lean_module_capsules/index.json"}'
+ printf '"index_path":"%s"' .tau_ledger/lean_module_capsules/index.json
+ printf '}\n'
[rc=0] scripts/meta/corridor_bind_capsules.sh
[run] scripts/docs/gen_module_catalog.sh
+ cd /c/Users/Cody/Desktop/tau_crystal/tau_crystal
+ set -euo pipefail
+ set +H
+ umask 022
+ export LC_ALL=C LANG=C
+ LC_ALL=C
+ LANG=C
+ BASE=.tau_ledger/lean_module_capsules
+ OUT=docs/modules/index.html
+ :
+ printf '%s\n' '<!doctype html><meta charset=utf-8><title>Lean Module Capsules</title>'
+ printf '%s\n' '<h1>Lean Module Capsules</h1><p>Sealed per-module build receipts.</p><table border=1 cellpadding=6 cellspacing=0><tr><th>Module</th><th>Build</th><th>ms</th><th>src bytes</th><th>olean bytes</th><th>sealed</th></tr>'
+ find .tau_ledger/lean_module_capsules -type f -name '*.json' '!' -name index.json -print0
+ sort -z
+ IFS=
+ read -r -d '' j
++ grep -m1 '"module":' .tau_ledger/lean_module_capsules/capsule_set.seal.json
++ sed -E 's/.*"module":"([^"]+)".*/\1/'
+ mod=
[rc=1] scripts/docs/gen_module_catalog.sh
[run] scripts/ci/lean_capsule_gate.sh
+ cd /c/Users/Cody/Desktop/tau_crystal/tau_crystal
+ set -euo pipefail
+ set +H
+ umask 022
+ export LC_ALL=C LANG=C
+ LC_ALL=C
+ LANG=C
+ IDX=.tau_ledger/lean_module_capsules/index.json
+ '[' -s .tau_ledger/lean_module_capsules/index.json ']'
+ grep -q '"build_ok":0' .tau_ledger/lean_module_capsules/index.json
+ echo '[gate] FAIL: some modules failed cold capsule test'
[gate] FAIL: some modules failed cold capsule test
+ exit 66
[rc=66] scripts/ci/lean_capsule_gate.sh
