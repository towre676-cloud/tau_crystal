name: erp-gate
on:
  pull_request:
    paths:
      - 'manifests/*.json'
jobs:
  gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: validate receipts
        run: |
          python - <<'PY'
import os, glob, json, hashlib, base64, subprocess, shutil, tempfile, sys
files=sorted(glob.glob("manifests/*.json"))
if not files:
  print("[gate] no manifests changed"); sys.exit(0)
openssl=shutil.which("openssl")
ok=True
for f in files:
  try:
    doc=json.load(open(f,"r",encoding="utf-8"))
    core={k:doc[k] for k in ("kind","version","process","tau","residue","witness","sustainability") if k in doc}
    canon=json.dumps(core, ensure_ascii=False, separators=(",",":"))
    calc="sha256:"+hashlib.sha256(canon.encode()).hexdigest()
    att=doc.get("attest",{})
    digest=att.get("merkle_root","")
    sig=att.get("signature","")
    pub=att.get("public_key_pem","")
    if not digest or digest!=calc:
      print("[hash mismatch or missing]", os.path.basename(f)); ok=False; continue
    if not sig:
      print("[unsigned]", os.path.basename(f)); ok=False; continue
    if openssl and pub and digest.startswith("sha256:"):
      hexmsg=digest.split("sha256:",1)[1]
      with tempfile.NamedTemporaryFile(delete=False) as m:
        m.write(bytes.fromhex(hexmsg)); m.flush()
        p=subprocess.run([openssl,"pkeyutl","-verify","-pubin","-inkey","/dev/stdin","-sigfile","/dev/stdin","-rawin","-in",m.name],
                         input=pub.encode()+b"\n"+base64.b64decode(sig), capture_output=True)
        if p.returncode!=0:
          print("[sig fail]", os.path.basename(f)); ok=False
  except Exception as e:
    print("[gate error]", os.path.basename(f), e); ok=False
if not ok:
  sys.exit(1)
print("[gate] OK")
PY
